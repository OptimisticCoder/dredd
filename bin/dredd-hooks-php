#!/usr/bin/env php
<?php

use Dredd\Server;
use Dredd\Hooks;

ini_set('implicit_flush', 'on');
ini_set('output_buffering', 'off');

$loaded = false;
foreach ([__DIR__ . '/../../../autoload.php', __DIR__ . '/../vendor/autoload.php'] as $file) {
    if (file_exists($file)) {
        require $file;
        $loaded = true;
        break;
    }
}
if (!$loaded) {
    die(
        'You need to set up the project dependencies using the following commands:' . PHP_EOL .
        'wget http://getcomposer.org/composer.phar' . PHP_EOL .
        'php composer.phar install' . PHP_EOL
    );
}

// Get options from the command line
$options = getopt('', [
    'host:',
    'port:',
    'force',
]);

// Extract parameters from options
if (array_key_exists('host', $options)) {
	$host = $options['host'];
}
if (array_key_exists('port', $options)) {
	$port = $options['port'];
}
$force = array_key_exists('force', $options);

// Remove parameters from the list of arguments
foreach($options as $key => $value) {
	if ($pos = array_search(sprintf('--%s=%s', $key, $value), $argv)) {
		unset($argv[$pos]);
		continue;
	}
	$posKey = array_search(sprintf('--%s', $key), $argv);
	$posValue = array_search($value, $argv);
	unset($argv[$posKey]);
	if ( 1 == abs($posKey - $posValue)) {
		unset($argv[$posValue]);
		continue;
	}
}

Hooks::loadHooks($argv);

$server = new Server();
if (isset($host)) {
	$server->setHost($host);
}
if (isset($port)) {
	$server->setPort($port);
}

fprintf(STDOUT, "Starting server\n");
flush();

$server->run($force);
